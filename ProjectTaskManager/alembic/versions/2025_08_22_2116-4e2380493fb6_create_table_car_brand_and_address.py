"""create table car, brand and address

Revision ID: 4e2380493fb6
Revises:
Create Date: 2025-08-22 21:16:11.789892

"""

from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = "4e2380493fb6"
down_revision: Union[str, Sequence[str], None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "addresss",
        sa.Column("country", sa.String(length=150), nullable=False),
        sa.Column("city", sa.String(length=150), nullable=False),
        sa.Column("street", sa.String(length=200), nullable=False),
        sa.Column("house", sa.String(), nullable=False),
        sa.Column("id", sa.UUID(), nullable=False),
        sa.PrimaryKeyConstraint("id", name=op.f("pk_addresss")),
        sa.UniqueConstraint("country", name=op.f("uq_addresss_country")),
    )
    op.create_table(
        "brands",
        sa.Column("name", sa.String(length=150), nullable=False),
        sa.Column("id", sa.UUID(), nullable=False),
        sa.PrimaryKeyConstraint("id", name=op.f("pk_brands")),
        sa.UniqueConstraint("name", name=op.f("uq_brands_name")),
    )
    op.create_table(
        "address_brands",
        sa.Column("address_id", sa.UUID(), nullable=False),
        sa.Column("brands_id", sa.UUID(), nullable=False),
        sa.Column("id", sa.UUID(), nullable=False),
        sa.ForeignKeyConstraint(
            ["address_id"],
            ["addresss.id"],
            name=op.f("fk_address_brands_address_id_addresss"),
        ),
        sa.ForeignKeyConstraint(
            ["brands_id"],
            ["brands.id"],
            name=op.f("fk_address_brands_brands_id_brands"),
        ),
        sa.PrimaryKeyConstraint("id", name=op.f("pk_address_brands")),
        sa.UniqueConstraint(
            "address_id", "brands_id", name="idx_unique_address_brands"
        ),
    )
    op.create_table(
        "cars",
        sa.Column("name", sa.String(length=100), nullable=False),
        sa.Column("color", sa.String(length=100), nullable=False),
        sa.Column("price", sa.Integer(), nullable=False),
        sa.Column("brand_id", sa.UUID(), nullable=False),
        sa.Column("id", sa.UUID(), nullable=False),
        sa.ForeignKeyConstraint(
            ["brand_id"], ["brands.id"], name=op.f("fk_cars_brand_id_brands")
        ),
        sa.PrimaryKeyConstraint("id", name=op.f("pk_cars")),
        sa.UniqueConstraint("name", name=op.f("uq_cars_name")),
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table("cars")
    op.drop_table("address_brands")
    op.drop_table("brands")
    op.drop_table("addresss")
    # ### end Alembic commands ###
